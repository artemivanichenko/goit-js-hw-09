{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,kBACzCC,EAAiBF,SAASC,cAAc,iBACxCE,EAAmBH,SAASC,cAAc,mBAC9BD,SAASC,cAAc,SAE/BG,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBAEF,IAAMC,EAAcC,OAAOL,EAAiBM,OACtCC,EAAYF,OAAON,EAAeO,OAClCE,EAAaH,OAAOT,EAAgBU,OACpCG,EAAYC,MAAMC,KAAK,CAAEC,OAAQR,IAAe,SAACS,EAAGC,G,OAAMA,EAAI,C,IAEpEC,QAAQC,IAAIP,GACZA,EAAUQ,SAAQ,SAACC,EAAUJ,IAS/B,SAAuBI,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,KAfHS,CAAcV,EAFGX,EAAYO,EAAIN,GAG9BqB,MAAK,SAAAC,G,OAAUpC,EAAAqC,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAC,G,OAASxC,EAAAqC,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayValueInput = document.querySelector(\"[name='delay']\");\nconst stepValueInput = document.querySelector(\"[name='step']\");\nconst amountValueInput = document.querySelector(\"[name='amount']\");\nconst submitBtn = document.querySelector('.form');\n\nsubmitBtn.addEventListener('submit', handleInputValue);\n\nfunction handleInputValue(e) {\n  e.preventDefault();\n\n  const amountValue = Number(amountValueInput.value);\n  const stepValue = Number(stepValueInput.value);\n  const delayValue = Number(delayValueInput.value);\n  const positions = Array.from({ length: amountValue }, (_, i) => i + 1);\n\n  console.log(positions);\n  positions.forEach((position, i) => {\n    const newDelay = stepValue * i + delayValue;\n\n    createPromise(position, newDelay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  });\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayValueInput","document","querySelector","$ce04d3a99e08e73b$var$stepValueInput","$ce04d3a99e08e73b$var$amountValueInput","addEventListener","e","preventDefault","amountValue","Number","value","stepValue","delayValue","positions","Array","from","length","_","i","console","log","forEach","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.3e0441cd.js.map"}